name: Java Maven Build, Test, and Publish

on:
  workflow_dispatch:
  push:
    branches:
#      - feature*
      - develop
      - bugfix-*
      - '*-auto-img'
    tags: [ 'v*.*.*' ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  #IMAGE_NAME: ${{ github.repository }}
  IMAGE_NAME: ${{ github.repository_owner }}/dataone-index-worker
#  SOLR_VERSION: 9.8.1
  D1_OBJECT_MANAGER_CLASS_NAME: org.dataone.cn.indexer.object.legacystore.LegacyStoreObjManager

jobs:
  maven-build:
    name: Maven Build and Test
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'
      - name: Extract Maven project version
        run: |
          echo "version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_OUTPUT
        id: get_version
#      - name: Start Solr
#        run: |
#          docker run -d \
#          --name solr \
#          -p 8983:8983 \
#          -v ${{ github.workspace }}/src/test/resources/org/dataone/cn/index/resources/solr9home:/var/solr/data \
#          -e SOLR_HOME=/var/solr/data \
#          solr:8 \
#          solr-precreate collection1 /var/solr/data
#          for i in {1..10}; do
#            if curl -sSf http://localhost:8983/solr/admin/ping; then
#              echo "Solr is up!"
#              exit 0
#            fi
#            echo "Waiting for Solr..."
#            sleep 3
#          done
#          echo "Solr failed to start"
#          exit 1
#        run: |
#          wget -q https://downloads.apache.org/solr/solr/${{ env.SOLR_VERSION }}/solr-${{ env.SOLR_VERSION }}.tgz
#          tar xzf solr-${{ env.SOLR_VERSION }}.tgz
#          solr-${{ env.SOLR_VERSION }}/bin/solr start -p 8983
      - name: Setup var-metacat directories
        run: |
          sudo mkdir -p /var/metacat/data
          sudo mkdir -p /var/metacat/documents
          sudo chmod -R 777 /var/metacat
      - name: Build and Test
        id: build-and-test
        run: |
          mvn -s .github/maven/settings.xml --batch-mode --update-snapshots \
        -Dtest=org.dataone.cn.indexer.annotation.AnnotatorSubprocessorTest,\
        org.dataone.cn.indexer.annotation.SolrFieldAnnotatorTest,\
        org.dataone.cn.indexer.annotation.SolrFieldEmlAnnotationTest, \
        org.dataone.cn.indexer.annotation.SolrIndexAnnotatorTest \
        test
        continue-on-error: true
      - name: Upload test logs if tests failed
        if: steps.build-and-test.outcome != 'success'
        uses: actions/upload-artifact@v4
        with:
          name: surefire-reports
          path: target/surefire-reports/
      - name: Fail build if tests failed
        if: steps.build-and-test.outcome != 'success'
        run: exit 1
      - name: Package
        run: |
          mvn -s .github/maven/settings.xml --batch-mode --update-snapshots -DskipTests=true package
      - uses: actions/cache@v4
        with:
          path: .
          key: builddir-${{ github.run_id }}

  docker-publish:
    name: Docker Build and Publish
    if: github.ref_name == 'develop' || github.ref_name == 'v*.*.*'
    needs: maven-build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/cache@v4
        with:
          path: .
          key: builddir-${{ github.run_id }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
            
      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/Dockerfile
          build-args: TAG=${{needs.maven-build.outputs.version}}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
